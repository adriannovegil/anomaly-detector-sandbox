version: '3.8'

services:
  # Anomaly Detector
  anomaly-detector:
    build: ./docker/anomaly-detector
    image: pad/anomaly-detector-prometheus
    container_name: anomaly-detector-prometheus
    environment:
      - FLT_PROM_URL=http://thanos-querier:10902
      - FLT_PROM_ACCESS_TOKEN=
      - FLT_METRICS_LIST=system_cpu_usage{service='admin-server'};system_cpu_usage{service='config-server'};system_cpu_usage{service='discovery-server'};system_cpu_usage{service='api-gateway'};system_cpu_usage{service='vets-service'};system_cpu_usage{service='customers-service'};system_cpu_usage{service='visits-service'}
      - FLT_RETRAINING_INTERVAL_MINUTES=15
      - FLT_ROLLING_TRAINING_WINDOW_SIZE=24h
      - FLT_DEBUG_MODE=True
      - APP_FILE=/pad/app.py
    volumes:
      - ./anomaly-detector:/pad
    ports:
      - 8070:8080
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # Prometheus - anomaly detector
  anomaly-prometheus-server:
    image: prom/prometheus:v2.29.2
    volumes:
      - ./docker/prometheus-server/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusserver_anomaly_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9098:9090
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # Grafana - anomaly detector
  anomaly-grafana-server:
    image: grafana/grafana:8.1.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./docker/grafana-server/etc:/etc/grafana:ro
      - ./docker/grafana-server/dashboards:/var/lib/grafana/dashboards
      - grafana-lib-anomaly:/var/lib/grafana
      - grafana-log-anomaly:/var/log/grafana
    ports:
      - 3002:3000
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

volumes:
  prometheusserver_anomaly_data: {}
  grafana-lib-anomaly:
    external: false
  grafana-log-anomaly:
    external: false

networks:
  observabilitysandbox:
    name: observabilitysandbox
    external: true
